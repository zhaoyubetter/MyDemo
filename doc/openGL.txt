openGL 相关笔记；
1. 光栅化（Rasterization）技术:
    移动设置的显示屏，由像素（pixel）组成，每个像素都成表示不同的颜色；每个像素由，RGB3个子组件构成，RGB光不一样，颜色变不一样了；
    OpenGL 通过光栅化的过程把每个点、直线与三角形分解成大量小片段，并映射到显示屏像素上，从而生成一副图像，这里的片段类似于屏幕上的像素；
    这里的片段包含 RBGA；

    片段着色器的目的告诉 GPU 每个片段的最终颜色是什么；着色器只是可以运行在 GPU 上的一个特殊类型的程序；
2. 一个 OpenGL 程序就是把一个顶点着色器和一个片段着色器链接在一起变成单个对象；他们总是一起工作；
    片段着色器：汇总组成每个点、直线、三角形的片段；
    顶点着色器：在哪里绘制片段；
3. OpenGL 如何把坐标映射到屏幕
    无论是x,还是y坐标，OpenGL都会把屏幕映射到 [-1,1]的范围内；
    a.屏幕左边为x轴的-1,右边为+1；
    b.屏幕底部对应y的-1，顶部对应+1；


///////////// code
// 定义浮点数的默认精度：可选 lowp、mediump、highp 分别对应 低、中、高
precision mediump float;

// 生成片段着色器的颜色
// 一个 uniform 会让每个顶点都使用同一个值
// u_Color 为4颜色分量
uniform vec4 u_Color;

void main()
{
    // 着色器给 gl_FragColor 赋值，OpenGL 使用此颜色作为当前片段的最终颜色
    gl_FragColor = u_Color;
}

------

// GLSL 是 openGL 的着手语言；语法类似于 C
// 定义过的顶点，顶点着色器会被调用一次，被调用的时候 a_position 属性接收当前顶点信息，类似为 vec4 类型；
// 1.vec4 在位置上下文中含：x，y，z， 三维位置，另还有一个 w 属性；
// 2.attribute 把顶点属性（如：颜色、位置等）放入着色器
// 3.openGL 会把 gl_Position 中存储的值作为当前顶点的最终位置，并将这些顶点组织成点、直线和三角形

attribute vec4 a_Position;

void main()
{
    gl_Position = a_Position;
}